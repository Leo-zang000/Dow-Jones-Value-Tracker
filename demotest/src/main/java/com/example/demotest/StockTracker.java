/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example.demotest;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.stage.Stage;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Scanner;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;

public class StockTracker extends Application{

    private String key = "";

    private XYChart.Series<Number, Number> series;

    @Override public void start(Stage stage) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        key = reader.readLine();
        stage.setTitle("'Dow Jones Tracker");


        final NumberAxis xAxis = new NumberAxis();
        final NumberAxis yAxis = new NumberAxis();

        xAxis.setLabel("Timestamp (seconds)");
        yAxis.setLabel("Stock Price");

        LineChart<Number, Number> lineChart = new LineChart<>(xAxis, yAxis);

        series = new XYChart.Series<>();


        lineChart.setTitle("Dow Jones Tracker");

        lineChart.getData().add(series);

        Scene scene = new Scene(lineChart, 800, 600);

        stage.setScene(scene);
        stage.show();

        ScheduledExecutorService scheduledExecutorService;
        scheduledExecutorService = Executors.newSingleThreadScheduledExecutor();

        AtomicInteger time = new AtomicInteger();
        scheduledExecutorService.scheduleAtFixedRate(() -> Platform.runLater(() -> {
            URL url;
            try {
                url = new URL("https://finnhub.io/api/v1/quote?symbol=DIA&token="+key);
            } catch (MalformedURLException e) {
                throw new RuntimeException(e);
            }

            StringBuilder inputLine = new StringBuilder();
            Scanner scanner;
            try {
                scanner = new Scanner(url.openStream());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            while (scanner.hasNext()) {
                inputLine.append(scanner.nextLine());
            }

            JSONParser parse = new JSONParser();
            JSONObject data_obj;
            try {
                data_obj = (JSONObject) parse.parse(inputLine.toString());
            } catch (ParseException e) {
                throw new RuntimeException(e);
            }

            double val = Double.parseDouble(data_obj.get("c").toString());
            double timestamp = Double.parseDouble(data_obj.get("t").toString());
            time.addAndGet(5);

            // get current time
            int finalTime = time.get();
            // put random number with current time
            series.getData().add(new XYChart.Data<>(finalTime, val));
        }), 0, 5, TimeUnit.SECONDS);
    }

    static void main() {
        launch();
    }
}